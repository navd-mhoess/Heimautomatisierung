name: Build & Publish PRODUCTION (pull-based)

on:
  push:
    tags: [ PRODUCTION ]
  workflow_dispatch: {}

# Für Release-Upload nötig
permissions:
  contents: write

jobs:
  build-and-release:
    if: github.ref == 'refs/tags/PRODUCTION'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Build (Maven) im Unterordner
        working-directory: servlets/heimautomatisierung.heating-orchestrator
        run: mvn -B -DskipTests package

      - name: Artefakt finden
        id: findjar
        shell: bash
        working-directory: servlets/heimautomatisierung.heating-orchestrator
        run: |
          set -euo pipefail
          jar=$(ls -1 target/*-SNAPSHOT.jar 2>/dev/null || true)
          if [ -z "$jar" ]; then jar=$(ls -1 target/*.jar | head -n1); fi
          [ -n "$jar" ] || { echo "Kein JAR gefunden"; exit 1; }
          echo "jar=$jar" >> "$GITHUB_OUTPUT"

      - name: Artefakte vorbereiten
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p dist
          # Jar in ein definiertes Dateiname kopieren
          cp "servlets/heimautomatisierung.heating-orchestrator/${{ steps.findjar.outputs.jar }}" dist/heating-orchestrator.jar
          # SHA256 nur als Hash-Wert (ohne Dateinamen) erzeugen
          sha256sum dist/heating-orchestrator.jar | awk '{print $1}' > dist/heating-orchestrator.jar.sha256
          # Sanity-Checks: keine 0-Byte-Dateien
          [ -s dist/heating-orchestrator.jar ] || { echo "JAR ist leer!"; exit 1; }
          [ -s dist/heating-orchestrator.jar.sha256 ] || { echo "SHA256 ist leer!"; exit 1; }

      - name: Checksum verifizieren (Lokaltest)
        shell: bash
        run: |
          set -euo pipefail
          calc=$(sha256sum dist/heating-orchestrator.jar | awk '{print $1}')
          want=$(tr -d '[:space:]' < dist/heating-orchestrator.jar.sha256)
          [ "$calc" = "$want" ] || { echo "Checksum mismatch ($calc != $want)"; exit 1; }

      - name: Release @ PRODUCTION aktualisieren
        uses: softprops/action-gh-release@v2
        with:
          tag_name: PRODUCTION
          name: PRODUCTION
          body: "Automated build for PRODUCTION"
          files: |
            dist/heating-orchestrator.jar
            dist/heating-orchestrator.jar.sha256
